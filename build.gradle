plugins {
    id "net.neoforged.moddev.legacyforge" version "2.0.52-beta"
    id "java"
}

version = "${mod_version}"
group = 'dev.trinsdar' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'gt-spartan'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
apply from: 'https://raw.githubusercontent.com/GregTech-Intergalactical/GradleSripts/main/repositories.gradle'
//Print out JVM information so that we know what version is running. Extreamly useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

neoForge {
    version = "${project.minecraft_version}-${project.forge_version}"
    parchment {
        minecraftVersion = rootProject.minecraft_version
        mappingsVersion = rootProject.mappings_version
    }
    runs {
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation("org.jetbrains:annotations:26.0.1")

    //runtimeOnly fg.deobf("curse.maven:world_stripper-250603:${world_stripper_file}")
    //runtimeOnly fg.deobf("curse.maven:world_edit-225608:${world_edit_file}")
    modImplementation("curse.maven:spartan_weaponry-278141:${spartan_weaponry_file}")
    modRuntimeOnly("curse.maven:top-245211:${top_file}")
    //runtimeOnly fg.deobf("curse.maven:mmmm-225738:${mmmm_file}")

    modImplementation("io.github.gregtechintergalactical:antimatter-forge:${antimatter_version}")
    modImplementation("io.github.gregtechintergalactical:tesseract-forge:${tesseract_version}"){
        exclude(group: "maven.modrinth")
    }


    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    modImplementation("mezz.jei:jei-${rootProject.minecraft_version}-forge:${rootProject.jei_version}")
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

mixin {
    add sourceSets.main, "gtsp.refmap.json"
}

jar {
    zip64 true
    manifest {
        attributes([
                "MixinConfigs": "gtsp.mixins.json",
                "Specification-Title": project.name,
                "Specification-Vendor": "GT Spartan",
                "Specification-Version": project.version,
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "GT Spartan",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
